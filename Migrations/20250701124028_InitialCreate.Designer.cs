// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NMCNPM_Nhom7.Data;

#nullable disable

namespace NMCNPM_Nhom7.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250701124028_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CustomersModel", b =>
                {
                    b.Property<int>("ICustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("iCustomerID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ICustomerID"));

                    b.Property<int>("ILoyaltyPoints")
                        .HasColumnType("int")
                        .HasColumnName("iLoyaltyPoints");

                    b.Property<string>("SFullName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("sFullName");

                    b.Property<string>("SPhone")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("sPhone");

                    b.HasKey("ICustomerID");

                    b.HasIndex("SPhone")
                        .IsUnique();

                    b.ToTable("tblCustomers");
                });

            modelBuilder.Entity("DiscountedProductModel", b =>
                {
                    b.Property<int>("IDiscountID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("iDiscountID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDiscountID"));

                    b.Property<DateTime>("DEndDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("dEndDate");

                    b.Property<DateTime>("DStartDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("dStartDate");

                    b.Property<decimal>("FDiscountAmount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("fDiscountAmount");

                    b.Property<decimal>("FDiscountPercent")
                        .HasColumnType("decimal(5,2)")
                        .HasColumnName("fDiscountPercent");

                    b.Property<int>("IProductID")
                        .HasColumnType("int")
                        .HasColumnName("iProductID");

                    b.Property<string>("SDescription")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("sDescription");

                    b.HasKey("IDiscountID");

                    b.HasIndex("IProductID");

                    b.ToTable("tblDiscountedProducts");
                });

            modelBuilder.Entity("InvoiceDetailModel", b =>
                {
                    b.Property<int>("IInvoiceDetailID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("iInvoiceDetailID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IInvoiceDetailID"));

                    b.Property<decimal>("FUnitPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("fUnitPrice");

                    b.Property<int?>("IInvoiceID")
                        .HasColumnType("int")
                        .HasColumnName("iInvoiceID");

                    b.Property<int?>("IProductID")
                        .HasColumnType("int")
                        .HasColumnName("iProductID");

                    b.Property<int>("IQuantity")
                        .HasColumnType("int")
                        .HasColumnName("iQuantity");

                    b.HasKey("IInvoiceDetailID");

                    b.HasIndex("IInvoiceID");

                    b.HasIndex("IProductID");

                    b.ToTable("tblInvoiceDetails");
                });

            modelBuilder.Entity("InvoiceModel", b =>
                {
                    b.Property<int>("IInvoiceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("iInvoiceID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IInvoiceID"));

                    b.Property<DateTime>("DCreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("dCreatedDate");

                    b.Property<decimal>("FTotal")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("fTotal");

                    b.Property<decimal>("FVAT")
                        .HasColumnType("decimal(5,2)")
                        .HasColumnName("fVAT");

                    b.Property<int?>("ICustomerID")
                        .HasColumnType("int")
                        .HasColumnName("iCustomerID");

                    b.Property<int?>("IEmployeeID")
                        .HasColumnType("int")
                        .HasColumnName("iEmployeeID");

                    b.HasKey("IInvoiceID");

                    b.HasIndex("ICustomerID");

                    b.HasIndex("IEmployeeID");

                    b.ToTable("tblInvoices");
                });

            modelBuilder.Entity("NMCNPM_Nhom7.Models.EmployeeModel", b =>
                {
                    b.Property<int>("IEmployeeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("iEmployeeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IEmployeeID"));

                    b.Property<bool>("BGender")
                        .HasColumnType("bit")
                        .HasColumnName("bGender");

                    b.Property<DateTime?>("DBirthDate")
                        .HasColumnType("date")
                        .HasColumnName("dBirthDate");

                    b.Property<byte>("IRoleID")
                        .HasColumnType("tinyint")
                        .HasColumnName("iRoleID");

                    b.Property<string>("SAddress")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("sAddress");

                    b.Property<string>("SCCCD")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)")
                        .HasColumnName("sCCCD");

                    b.Property<string>("SEmail")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("sEmail");

                    b.Property<string>("SFullName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("sFullName");

                    b.Property<string>("SPasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("sPasswordHash");

                    b.Property<string>("SPhone")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("sPhone");

                    b.Property<string>("SStatus")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasDefaultValue("active")
                        .HasColumnName("sStatus");

                    b.HasKey("IEmployeeID");

                    b.HasIndex("IRoleID");

                    b.HasIndex("SCCCD")
                        .IsUnique();

                    b.HasIndex("SEmail")
                        .IsUnique()
                        .HasFilter("[sEmail] IS NOT NULL");

                    b.HasIndex("SPhone")
                        .IsUnique();

                    b.ToTable("tblEmployees");
                });

            modelBuilder.Entity("NMCNPM_Nhom7.Models.RoleModel", b =>
                {
                    b.Property<byte>("IRoleID")
                        .HasColumnType("tinyint")
                        .HasColumnName("iRoleID");

                    b.Property<string>("SRoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("sRoleName");

                    b.HasKey("IRoleID");

                    b.HasIndex("SRoleName")
                        .IsUnique();

                    b.ToTable("tblRoles");
                });

            modelBuilder.Entity("ProductCategoryModel", b =>
                {
                    b.Property<int>("ICategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("iCategoryID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ICategoryID"));

                    b.Property<string>("SCategoryName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("sCategoryName");

                    b.HasKey("ICategoryID");

                    b.ToTable("tblProductCategories");
                });

            modelBuilder.Entity("ProductModel", b =>
                {
                    b.Property<int>("IProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("iProductID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IProductID"));

                    b.Property<decimal?>("FPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("fPrice");

                    b.Property<int?>("ICategoryID")
                        .HasColumnType("int")
                        .HasColumnName("iCategoryID");

                    b.Property<int>("IQuantity")
                        .HasColumnType("int")
                        .HasColumnName("iQuantity");

                    b.Property<int?>("ISupplierID")
                        .HasColumnType("int")
                        .HasColumnName("iSupplierID");

                    b.Property<int?>("IUnitID")
                        .HasColumnType("int")
                        .HasColumnName("iUnitID");

                    b.Property<string>("SProductName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("sProductName");

                    b.HasKey("IProductID");

                    b.HasIndex("ICategoryID");

                    b.HasIndex("ISupplierID");

                    b.HasIndex("IUnitID");

                    b.ToTable("tblProducts");
                });

            modelBuilder.Entity("SupplierModel", b =>
                {
                    b.Property<int>("ISupplierID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("iSupplierID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ISupplierID"));

                    b.Property<string>("SAddress")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("sAddress");

                    b.Property<string>("SCompanyName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("sCompanyName");

                    b.Property<string>("SEmail")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("sEmail");

                    b.Property<string>("SPhone")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("sPhone");

                    b.HasKey("ISupplierID");

                    b.HasIndex("SEmail")
                        .IsUnique()
                        .HasFilter("[sEmail] IS NOT NULL");

                    b.HasIndex("SPhone")
                        .IsUnique()
                        .HasFilter("[sPhone] IS NOT NULL");

                    b.ToTable("tblSuppliers");
                });

            modelBuilder.Entity("UnitModel", b =>
                {
                    b.Property<int>("IUnitID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("iUnitID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IUnitID"));

                    b.Property<string>("SUnitName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("sUnitName");

                    b.HasKey("IUnitID");

                    b.HasIndex("SUnitName")
                        .IsUnique();

                    b.ToTable("tblUnits");
                });

            modelBuilder.Entity("DiscountedProductModel", b =>
                {
                    b.HasOne("ProductModel", "Product")
                        .WithMany()
                        .HasForeignKey("IProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_DiscountedProducts_Product");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("InvoiceDetailModel", b =>
                {
                    b.HasOne("InvoiceModel", "Invoice")
                        .WithMany()
                        .HasForeignKey("IInvoiceID")
                        .HasConstraintName("FK_InvoiceDetail_Invoice");

                    b.HasOne("ProductModel", "Product")
                        .WithMany()
                        .HasForeignKey("IProductID")
                        .HasConstraintName("FK_InvoiceDetail_Product");

                    b.Navigation("Invoice");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("InvoiceModel", b =>
                {
                    b.HasOne("CustomersModel", "Customer")
                        .WithMany()
                        .HasForeignKey("ICustomerID")
                        .HasConstraintName("FK_Invoices_Customers");

                    b.HasOne("NMCNPM_Nhom7.Models.EmployeeModel", "Employee")
                        .WithMany()
                        .HasForeignKey("IEmployeeID")
                        .HasConstraintName("FK_Invoices_Employee");

                    b.Navigation("Customer");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("NMCNPM_Nhom7.Models.EmployeeModel", b =>
                {
                    b.HasOne("NMCNPM_Nhom7.Models.RoleModel", "IRole")
                        .WithMany("Employees")
                        .HasForeignKey("IRoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Roles_iEmployeeID");

                    b.Navigation("IRole");
                });

            modelBuilder.Entity("ProductModel", b =>
                {
                    b.HasOne("ProductCategoryModel", "Category")
                        .WithMany()
                        .HasForeignKey("ICategoryID")
                        .HasConstraintName("FK_Products_ProductCategories");

                    b.HasOne("SupplierModel", "Supplier")
                        .WithMany()
                        .HasForeignKey("ISupplierID")
                        .HasConstraintName("FK_Suppliers_iSupplierID");

                    b.HasOne("UnitModel", "Unit")
                        .WithMany()
                        .HasForeignKey("IUnitID")
                        .HasConstraintName("FK_Units_iUnitID");

                    b.Navigation("Category");

                    b.Navigation("Supplier");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("NMCNPM_Nhom7.Models.RoleModel", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
